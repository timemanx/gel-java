plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

ext {
    project_version = '0.4.1-SNAPSHOT'
    github_org = 'geldata'
    project_name = 'gel-java'
    artifact_group = 'com.geldata'
    project_description = 'Java binding for Gel'
    project_url = "https://geldata.com"
    project_jdk = '21'
    jdk = JavaVersion.current().majorVersion
    jdk_javadoc = "https://docs.oracle.com/javase/$jdk/docs/api/".toString()
    if (JavaVersion.current().isJava11Compatible()) {
        jdk_javadoc = "https://docs.oracle.com/en/java/javase/$jdk/docs/api/".toString()
    }

    // dependencies
    jackson_version = '2.15.2'
    slf4j_version = '2.0.5'
    netty_version = '4.1.89.Final'
    joou_version = '0.9.4'
    reflections_version = '0.10.2'

    // test dependencies
    junit_version = '5.9.2'
    assertj_version = '3.24.2'
    logback_version = '1.4.5'

    isRelease = !project_version.toString().endsWith('-SNAPSHOT')
}

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    
    if (isRelease) {
        apply plugin: 'signing'
    }

    group = artifact_group
    version = project_version
    description = project_description

    sourceCompatibility = project_jdk
    targetCompatibility = project_jdk

    dependencies {
        implementation platform("io.netty:netty-bom:$netty_version")
        testImplementation "org.junit.jupiter:junit-jupiter:$junit_version"
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    configurations.configureEach {
        resolutionStrategy.cacheChangingModulesFor 60, 'seconds'
    }

    tasks.withType(Javadoc).configureEach {
        options {
            encoding = 'UTF-8'
            tags = ["apiNote:a:API Note:",
                    "implSpec:a:Implementation Requirements:",
                    "implNote:a:Implementation Note:"]
            addStringOption 'Xdoclint:none', '-quiet'
            addStringOption 'encoding', 'UTF-8'
        }
        if (JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
        options.incremental = true
    }

    tasks.register('downloadDependencies') {
        description 'Download all dependencies to the Gradle cache'
        doLast {
            configurations.findAll { it.canBeResolved }.files
        }
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    test {
        useJUnitPlatform()
        testLogging {
            exceptionFormat = 'full'
            showStandardStreams = true
        }
    }
}

subprojects {
    archivesBaseName = "com.geldata.$project.name"

    tasks.withType(Javadoc).configureEach {
        title = "$archivesBaseName ${version} API"
        options.windowTitle = "$archivesBaseName ($version)"
    }

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/timemanx/gel-java")
                credentials {
                    username = project.findProperty("gpr.user")?.toString() ?: System.getenv("USERNAME")
                    password = project.findProperty("gpr.key")?.toString() ?: System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }
}

